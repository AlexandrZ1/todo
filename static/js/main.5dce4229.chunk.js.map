{"version":3,"sources":["api/index.js","constants/constants.js","hooks/pagination.hook.js","utils/generatorParams.js","hooks/input.hook.js","components/Input.styles.js","components/Input.jsx","components/Item.styles.js","components/Item.jsx","components/Main.styles.js","components/Sort.styles.js","components/Sort.jsx","components/Main.jsx","App.theme.js","App.jsx","reportWebVitals.js","index.js"],"names":["Api","axios","create","baseURL","process","QUERY_PARAMS","usePagination","rowsVisibleCount","todos","useState","currentPage","setCurrentPage","resTodos","slice","pageCount","useMemo","Math","ceil","length","pages","Array","from","_","k","showPagination","useEffect","getSortParams","filterBy","sortBy","resParams","useInput","initialValue","value","setValue","handleChange","e","target","useStyles","makeStyles","theme","input","width","Input","handleAddTodo","classes","handleOnKeyPress","a","key","TextField","className","autoComplete","size","variant","color","inputProps","maxLength","placeholder","onKeyPress","onChange","onBlur","item","height","display","alignItems","justifyContent","container","margin","borderRadius","text","flexGrow","padding","whiteSpace","wordBreak","alignSelf","success","palette","main","delete","error","Item","todo","handleDelete","handleDone","handleEdit","visibleEdit","setVisibleEdit","typesKey","handleOnKeyDown","id","clases","Grow","in","Paper","elevation","IconButton","onClick","done","autoFocus","onKeyDown","Typography","Date","date","toLocaleDateString","year","month","day","position","flexDirection","list","head","flex","pagination","backgroundColor","primary","loader","opacity","zIndex","top","left","alert","marginTop","sort","sorting_date","Sort","setFilterBy","setSortBy","params","ButtonGroup","map","i","Button","prevState","Main","setTodos","loading","setLoading","alertText","setAlertText","getTodos","get","response","data","name","createdAt","uuid","message","todoId","patch","post","CircularProgress","disableShrink","Alert","onClose","severity","Slide","direction","Pagination","count","page","showFirstButton","showLastButton","hideNextButton","hidePrevButton","shape","useTheme","createTheme","secondary","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dce4229.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst Api = axios.create({\r\n  baseURL: process.env.REACT_APP_HOST,\r\n});\r\n\r\nexport default Api;\r\n","export const QUERY_PARAMS = {\r\n  nameOrder: 'order',\r\n  nameFilterBy: 'filterBy',\r\n  done: 'done',\r\n  undone: 'undone',\r\n  desc: 'desc',\r\n  asc: 'asc',\r\n  all: '',\r\n}\r\n","import { useEffect, useMemo, useState } from 'react'\r\n\r\nconst usePagination = (rowsVisibleCount, todos) => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const resTodos = todos.slice(\r\n    (currentPage - 1) * rowsVisibleCount,\r\n    currentPage * rowsVisibleCount\r\n  )\r\n\r\n  const pageCount = useMemo(() => {\r\n    return Math.ceil(todos.length / rowsVisibleCount)\r\n  }, [todos.length, rowsVisibleCount])\r\n\r\n  const pages = useMemo(() => {\r\n    return Array.from(new Array(pageCount), (_, k) => k + 1)\r\n  }, [pageCount])\r\n\r\n  const showPagination = useMemo(() => {\r\n    return todos.length > rowsVisibleCount\r\n  }, [todos.length, rowsVisibleCount])\r\n\r\n  useEffect(() => {\r\n    if (pageCount < currentPage) {\r\n      setCurrentPage(pageCount)\r\n    }\r\n  }, [pages])\r\n\r\n  return {\r\n    pages,\r\n    showPagination,\r\n    pageCount,\r\n    currentPage,\r\n    setCurrentPage,\r\n    resTodos,\r\n  }\r\n}\r\n\r\nexport default usePagination\r\n","import { QUERY_PARAMS } from '../constants/constants'\r\n\r\nexport const getSortParams = (filterBy, sortBy) => {\r\n  const resParams = {}\r\n  if (filterBy === QUERY_PARAMS.done)\r\n    resParams[QUERY_PARAMS.nameFilterBy] = QUERY_PARAMS.done\r\n  else if (filterBy === QUERY_PARAMS.undone)\r\n    resParams[QUERY_PARAMS.nameFilterBy] = QUERY_PARAMS.undone\r\n  if (sortBy === QUERY_PARAMS.desc)\r\n    resParams[QUERY_PARAMS.nameOrder] = QUERY_PARAMS.asc\r\n  else resParams[QUERY_PARAMS.nameOrder] = QUERY_PARAMS.desc\r\n  return resParams\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue)\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n  return {\r\n    value,\r\n    setValue,\r\n    handleChange,\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '55%',\r\n  },\r\n}))\r\n\r\nexport default useStyles\r\n","import { useInput } from '../hooks/input.hook'\r\nimport { TextField } from '@material-ui/core'\r\nimport useStyles from './Input.styles'\r\n\r\nconst Input = ({ handleAddTodo }) => {\r\n  const { value, setValue, handleChange } = useInput('')\r\n  const classes = useStyles()\r\n  const handleOnKeyPress = async (e) => {\r\n    if (e.key === 'Enter') {\r\n      await handleAddTodo(value)\r\n      setValue('')\r\n    }\r\n  }\r\n  return (\r\n    <TextField\r\n      className={classes.input}\r\n      autoComplete='off'\r\n      size='small'\r\n      variant='outlined'\r\n      color='primary'\r\n      inputProps={{ maxLength: 25, value: value, placeholder: 'I want to ...' }}\r\n      onKeyPress={(e) => handleOnKeyPress(e)}\r\n      onChange={(e) => handleChange(e)}\r\n      onBlur={() => setValue('')}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    height: '45px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  container: {\r\n    margin: '15px 0',\r\n    borderRadius: '10px',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n  },\r\n  text: {\r\n    flexGrow: '1',\r\n    padding: '0 5px',\r\n    whiteSpace: 'unset',\r\n    wordBreak: 'break-all',\r\n    alignSelf: 'none',\r\n  },\r\n  success: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  delete: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}))\r\n\r\nexport default useStyles\r\n","import {\r\n  Grow,\r\n  IconButton,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport CheckCircleOutlineTwoToneIcon from '@material-ui/icons/CheckCircleOutlineTwoTone'\r\nimport DeleteOutlineTwoToneIcon from '@material-ui/icons/DeleteOutlineTwoTone'\r\nimport { useEffect, useState } from 'react'\r\nimport { useInput } from '../hooks/input.hook'\r\nimport useStyles from './Item.styles'\r\n\r\nconst Item = ({ todo, handleDelete, handleDone, handleEdit }) => {\r\n  const { value, setValue, handleChange } = useInput(todo.text)\r\n  const [visibleEdit, setVisibleEdit] = useState(false)\r\n  const typesKey = { enter: 'Enter', escape: 'Escape' }\r\n\r\n  useEffect(() => {\r\n    setValue(todo.text)\r\n  }, [visibleEdit])\r\n\r\n  const handleBlur = () => {\r\n    setVisibleEdit(false)\r\n  }\r\n\r\n  const handleOnKeyDown = async (e) => {\r\n    if (e.key === typesKey.enter && todo.text !== value) {\r\n      await handleEdit(todo.id, value)\r\n      setVisibleEdit(false)\r\n    } else if (e.key === typesKey.escape) setVisibleEdit(false)\r\n  }\r\n\r\n  const clases = useStyles()\r\n\r\n  return (\r\n    <Grow in={!!todo}>\r\n      <Paper elevation={3} className={clases.container}>\r\n        <div className={clases.item}>\r\n          <IconButton onClick={() => handleDone(todo)}>\r\n            <CheckCircleOutlineTwoToneIcon\r\n              className={todo.done ? clases.success : ''}\r\n              color='secondary'\r\n            />\r\n          </IconButton>\r\n          <div className={clases.text} onClick={() => setVisibleEdit(true)}>\r\n            {visibleEdit && (\r\n              <Grow in={visibleEdit}>\r\n                <TextField\r\n                  className={clases.input}\r\n                  size='small'\r\n                  variant='outlined'\r\n                  autoFocus={true}\r\n                  inputProps={{ maxLength: 45, value: value }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  onKeyDown={(e) => handleOnKeyDown(e)}\r\n                  onBlur={() => handleBlur()}\r\n                />\r\n              </Grow>\r\n            )}\r\n            {!visibleEdit && (\r\n              <Grow in={!visibleEdit}>\r\n                <Typography>{todo.text}</Typography>\r\n              </Grow>\r\n            )}\r\n          </div>\r\n          <Typography>\r\n            {new Date(todo.date).toLocaleDateString('ru-RU', {\r\n              year: '2-digit',\r\n              month: '2-digit',\r\n              day: '2-digit',\r\n            })}\r\n          </Typography>\r\n          <IconButton onClick={() => handleDelete(todo)}>\r\n            <DeleteOutlineTwoToneIcon className={clases.delete} />\r\n          </IconButton>\r\n        </div>\r\n      </Paper>\r\n    </Grow>\r\n  )\r\n}\r\n\r\nexport default Item\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    position: 'relative',\r\n    width: '550px',\r\n    height: '640px',\r\n    padding: '35px 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    borderRadius: '10px',\r\n  },\r\n  list: {\r\n    width: '80%',\r\n    height: '55%',\r\n  },\r\n  head: {\r\n    flex: '0 0 10%',\r\n  },\r\n  pagination: {\r\n    flexGrow: '1',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& :hover': {\r\n      backgroundColor: theme.palette.primary,\r\n    },\r\n  },\r\n  loader: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    opacity: '0.4',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: '2',\r\n    top: '0',\r\n    left: '0',\r\n    borderRadius: '10px',\r\n  },\r\n  alert: {\r\n    marginTop: '5px',\r\n    width: '80%',\r\n  },\r\n}))\r\n\r\nexport default useStyles\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sort: {\r\n    width: '70%',\r\n    margin: '5px 0',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  sorting_date: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}))\r\n\r\nexport default useStyles\r\n","import { Button, ButtonGroup, IconButton, Typography } from '@material-ui/core'\r\nimport ArrowDownwardTwoToneIcon from '@material-ui/icons/ArrowDownwardTwoTone'\r\nimport ArrowUpwardTwoToneIcon from '@material-ui/icons/ArrowUpwardTwoTone'\r\nimport { QUERY_PARAMS } from '../constants/constants'\r\nimport useStyles from './Sort.styles'\r\n\r\nconst Sort = ({ filterBy, setFilterBy, sortBy, setSortBy }) => {\r\n  const buttons = ['All', 'Done', 'UnDone']\r\n  const params = [QUERY_PARAMS.all, QUERY_PARAMS.done, QUERY_PARAMS.undone]\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.sort}>\r\n      <ButtonGroup color='secondary' aria-label='outlined primary button group'>\r\n        {buttons.map((item, i) => (\r\n          <Button\r\n            key={i}\r\n            onClick={() => setFilterBy(params[i])}\r\n            color={filterBy === params[i] ? 'primary' : 'inherit'}\r\n            variant='contained'>\r\n            {item}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <div className={classes.sorting_date}>\r\n        <Typography>Sort by Date</Typography>\r\n        <IconButton\r\n          onClick={() =>\r\n            setSortBy((prevState) =>\r\n              QUERY_PARAMS.asc === prevState\r\n                ? QUERY_PARAMS.desc\r\n                : QUERY_PARAMS.asc\r\n            )\r\n          }>\r\n          {sortBy === QUERY_PARAMS.asc ? (\r\n            <ArrowDownwardTwoToneIcon />\r\n          ) : (\r\n            <ArrowUpwardTwoToneIcon />\r\n          )}\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sort\r\n","import {\r\n  CircularProgress,\r\n  Grow,\r\n  Paper,\r\n  Slide,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from '../api/index'\r\nimport { QUERY_PARAMS } from '../constants/constants'\r\nimport usePagination from '../hooks/pagination.hook'\r\nimport { getSortParams } from '../utils/generatorParams'\r\nimport Input from './Input'\r\nimport Item from './Item'\r\nimport useStyles from './Main.styles'\r\nimport Sort from './Sort'\r\n\r\nconst Main = () => {\r\n  const classes = useStyles()\r\n  const [todos, setTodos] = useState([])\r\n  const [filterBy, setFilterBy] = useState(QUERY_PARAMS.all)\r\n  const [sortBy, setSortBy] = useState(QUERY_PARAMS.asc)\r\n  const [loading, setLoading] = useState(true)\r\n  const [alertText, setAlertText] = useState({ error: false, text: '' })\r\n  const rowsVisibleCount = 5\r\n  const { showPagination, pageCount, currentPage, setCurrentPage, resTodos } =\r\n    usePagination(rowsVisibleCount, todos)\r\n  const getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('tasks/4', {\r\n        params: getSortParams(filterBy, sortBy),\r\n      })\r\n      setTodos(\r\n        response.data.map((todo) => {\r\n          return {\r\n            done: todo.done,\r\n            text: todo.name,\r\n            date: todo.createdAt,\r\n            id: todo.uuid,\r\n          }\r\n        })\r\n      )\r\n      setLoading(false)\r\n    } catch (error) {\r\n      setAlertText({ error: true, text: error.response.data.message })\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  //---------------------------Handlers-------------------------------\r\n  const handleEdit = async (todoId, value) => {\r\n    try {\r\n      setLoading(true)\r\n      await axios.patch(`task/4/${todoId}`, {\r\n        name: value,\r\n      })\r\n      setAlertText({ error: false, text: 'Task edited' })\r\n      await getTodos()\r\n    } catch (error) {\r\n      setAlertText({ error: true, text: error.response.data.message })\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleDone = async (todo) => {\r\n    try {\r\n      setLoading(true)\r\n      await axios.patch(`task/4/${todo.id}`, {\r\n        done: !todo.done,\r\n      })\r\n      await getTodos()\r\n      setAlertText({ error: false, text: 'Task updated' })\r\n    } catch (error) {\r\n      setAlertText({ error: true, text: error.response.data.message })\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (todo) => {\r\n    try {\r\n      setLoading(true)\r\n      await axios.delete(`task/4/${todo.id}`)\r\n      await getTodos()\r\n      setAlertText({ error: false, text: 'Task deleted' })\r\n    } catch (error) {\r\n      setAlertText({ error: true, text: error.response.data.message })\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAddTodo = async (value) => {\r\n    try {\r\n      setLoading(true)\r\n      await axios.post('task/4', {\r\n        name: value,\r\n        done: false,\r\n      })\r\n      setFilterBy(QUERY_PARAMS.all)\r\n      setCurrentPage(1)\r\n      setSortBy(QUERY_PARAMS.asc)\r\n      await getTodos()\r\n      setAlertText({ error: false, text: 'Task created' })\r\n    } catch (error) {\r\n      setAlertText({ error: true, text: error.response.data.message })\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleCloseAlert = () => {\r\n    setAlertText((prevState) => {\r\n      return { ...prevState, text: '' }\r\n    })\r\n  }\r\n  //---------------------------Effects-------------------------------\r\n\r\n  useEffect(() => {\r\n    getTodos()\r\n  }, [filterBy, sortBy])\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1)\r\n  }, [filterBy])\r\n\r\n  return (\r\n    <Grow in={true}>\r\n      <Paper elevation={3} className={classes.main}>\r\n        {loading && (\r\n          <div className={classes.loader}>\r\n            <CircularProgress color='inherit' disableShrink />\r\n          </div>\r\n        )}\r\n        <Typography className={classes.head} variant='h3'>\r\n          ToDo\r\n        </Typography>\r\n\r\n        <Input handleAddTodo={handleAddTodo} />\r\n\r\n        <Grow in={alertText.text}>\r\n          <Alert\r\n            className={classes.alert}\r\n            onClose={handleCloseAlert}\r\n            severity={alertText.error ? 'error' : 'success'}>\r\n            {alertText.text}\r\n          </Alert>\r\n        </Grow>\r\n\r\n        <Sort\r\n          setFilterBy={setFilterBy}\r\n          filterBy={filterBy}\r\n          setSortBy={setSortBy}\r\n          sortBy={sortBy}\r\n        />\r\n        <div className={classes.list}>\r\n          {resTodos.map((item) => (\r\n            <Item\r\n              key={item.id}\r\n              todo={item}\r\n              handleDelete={handleDelete}\r\n              handleDone={handleDone}\r\n              handleEdit={handleEdit}\r\n            />\r\n          ))}\r\n        </div>\r\n        {showPagination && (\r\n          <Slide direction='up' in={showPagination}>\r\n            <Pagination\r\n              className={classes.pagination}\r\n              color='primary'\r\n              count={pageCount}\r\n              page={currentPage}\r\n              onChange={(e, value) => setCurrentPage(value)}\r\n              showFirstButton\r\n              showLastButton\r\n              hideNextButton={true}\r\n              hidePrevButton={true}\r\n              shape='rounded'\r\n            />\r\n          </Slide>\r\n        )}\r\n      </Paper>\r\n    </Grow>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import { createTheme } from '@material-ui/core'\r\n\r\nconst useTheme = () => {\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#CCE6FF',\r\n      },\r\n      secondary: {\r\n        main: '#DDDDDD',\r\n      },\r\n      success: {\r\n        main: '#41BF7B',\r\n      },\r\n      error: {\r\n        main: '#EA5F5F',\r\n      },\r\n    },\r\n  })\r\n  return theme\r\n}\r\n\r\nexport default useTheme\r\n","import Main from './components/Main'\r\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\r\nimport useTheme from './App.theme'\r\n\r\nconst App = () => {\r\n  const theme = useTheme()\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Main />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}